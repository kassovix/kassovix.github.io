---
layout: post
title:  "k3s pour tester Helm sous Jenkins"
date:   2020-01-24 20:55:06 +0000
categories: k3s docker kubernetes jenkins
---


Objectif : valider un Helm Chart (V2) en CI (via Jenkins)

Solution : déployer le chart dans un cluster K8S et valider son fonctionnement.

# Partie 1 : un cluster Kubernetes pour les tests

Grâce à K3S, un outil Kubernetes léger développé par Rancher, je peux lancer en une ligne de commande Docker :

{% highlight sh %}
docker run --rm --name k3s -p 6443:6443 \
  -e K3S_TOKEN=randomtoken -e K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml \
  -e K3S_KUBECONFIG_MODE=666 -v $(pwd):/output --privileged rancher/k3s server
{% endhighlight %}

Les options en détail :

- `-p 6443:6443` :  Pour exposer le port API sur le réseau local
- `-e K3S_TOKEN=randomtoken` : Attribution d'un token (obligatoire)
- `-e K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml` : Choix d'un chemin de sortie pour le config kubectl
- `-e K3S_KUBECONFIG_MODE=666` : Chmod pour le fichier de config kubectl
- `-v $(pwd):/output` : Volume dans le répertoire courant (pour récupérer facilement la config kubectl)
- `--privileged` : Obligatoire sinon erreur "error configuring root directory: failed to bind-mount /var/lib/kubelet: operation not permitted"

Il faut ensuite installer Tiller dans le cluster :

{% highlight sh %}
export KUBECONFIG=kubeconfig.yaml # Pour s'épargner l'option --kubeconfig à chaque commande
kubectl -n kube-system create serviceaccount tiller
kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
helm init --service-account tiller
helm list
{% endhighlight %}

> Note 1 : si vous partez sur la version _latest_ de k3s, vous tomberez peut-être sur cette erreur : 
>
> `Error: error installing: the server could not find the requested resource`
>
> En effet, le Helm Init n'est pas compatible avec la nouvelle API K8S : [Helm init fails on Kubernetes 1.16.0](https://github.com/helm/helm/issues/6374).
> 
> Il faut donc choisir une version k3s embarquant une k8s v1.15 : **rancher/k3s:v0.9.1** .

> Note 2 : Tiller n'est plus requis à partir de Helm v3.



# Partie 2 : validation Helm

La [documentation Helm](https://v2.helm.sh/docs/chart_template_guide/#debugging-templates) présente les options `--debug` et `--dry-run` pour valider la syntaxe YAML ! Génial, essayons :

{% highlight sh %}
helm lint ./chart-name
helm install --debug --dry-run ./chart-name
{% endhighlight %}




## Sources

- [Cheap and local Kubernetes playground with K3s & Helm](https://medium.com/@marcovillarreal_40011/cheap-and-local-kubernetes-playground-with-k3s-helm-5a0e2a110de9)
- [k3s/docker-compose.yml at master · rancher/k3s · GitHub](https://github.com/rancher/k3s/blob/master/docker-compose.yml)
